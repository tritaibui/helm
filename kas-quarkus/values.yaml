replicaCount: 1

image:
  repository: trinitytechnology/linkifysoft-kas
  pullPolicy: IfNotPresent
  tag: "1.19.4"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: "kas"

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port:
    http: 8080

ingress:
  enabled: false
  className: "nginx"
  annotations: 
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: kas.linkifysoft.com
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: 
   - secretName: linkifysoft-tls
     hosts:
       - linkifysoft.com

resources:
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  requests:
    cpu: 50m
    memory: 400Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 1
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

config:
  kubernetes:
    namespace: "linkify-agent"
  linkify:
    connect:
      rest:
        url: http://connect.linkify-dev.svc.cluster.local:8080

secret:
  create: true
  name: "kas"
  git:
    repository: "https://np-gitea.linkifysoft.com/local/connect.git"
    username: "<your-git-username>"
    password: "<your-git-password>"
    branch: "main"
  containerImage:
    registry: "np-gitea.linkifysoft.com"
    group: "local"
    registryUsername: "<your-registry-username>"
    registryPassword: "<your-registry-password>"
  agent:
    token: "<your-agent-token>"
  websocket:
    url: "ws://host.docker.internal:8000/connection/websocket"

nodeSelector: {}

tolerations: []

affinity: {}

probe:
  liveness:
    enabled: false
    path: /q/health/live
    port: 8080
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 3
  readiness:
    enabled: false
    path: /q/health/ready
    port: 8080
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 3

# RBAC Configuration
rbac:
  createRole: true  # Enable role creation
  createRoleBinding: true  # Enable role binding creation
  role:
    name: "kas"
  roleBinding:
    name:  "kas-role-binding"